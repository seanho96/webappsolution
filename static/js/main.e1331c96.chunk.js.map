{"version":3,"sources":["hero.svg","components/Main.js","components/Contact.js","components/Thanks.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","useState","joined","setJoined","history","useHistory","Fragment","src","hero","alt","to","className","onSubmit","e","preventDefault","today","Date","date","getFullYear","getMonth","getDate","push","type","placeholder","onChange","target","value","Contact","title","setTitle","content","setContent","contactEmail","setContactEmail","sendEmail","a","email","console","log","onClick","goBack","htmlFor","name","Thanks","useParams","location","state","Routes","exact","path","component","App","_contact","setPath","window","addEventListener","pathname","useEffect","listen","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1331c96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.0e48089f.svg\";","import React, { useState } from \"react\";\r\nimport hero from \"../hero.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n\r\n  const [joined, setJoined] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const join = (e) => {\r\n    e.preventDefault();\r\n    if (joined !== \"\") {\r\n      let today = new Date();\r\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n      history.push(`/thanks/${joined}`, date)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <img src={hero} alt=\"hero\" />\r\n        <div>\r\n          <h1>Need a quick & efficient <br />web app?</h1>\r\n          <p>WebApp Solution has got you covered. We help our clients engineer custom web apps just like this one within 7 days post consultation.</p>\r\n          <Link to=\"/contact\">Get in touch</Link>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <section className=\"services\">\r\n          <h2>Why we should work together?</h2>\r\n\r\n          <div className=\"service-container\">\r\n            <div className=\"services-card service-one\"></div>\r\n            <div className=\"service-description\">\r\n              <h3>SEO Friendly Apps</h3>\r\n              <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque molestiae nisi modi tempora? Esse illum iure reiciendis delectus officia aspernatur, fuga dolore cupiditate. Cum aspernatur, autem tenetur non illo officiis quasi unde architecto sit molestiae corporis saepe odio dolore sunt deleniti quae quisquam. Provident reiciendis excepturi optio beatae ratione quisquam.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"service-container\">\r\n            <div className=\"services-card service-two\"></div>\r\n            <div className=\"service-description\">\r\n              <h3>Clear &amp; Optimized Code</h3>\r\n              <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque molestiae nisi modi tempora? Esse illum iure reiciendis delectus officia aspernatur, fuga dolore cupiditate. Cum aspernatur, autem tenetur non illo officiis quasi unde architecto sit molestiae corporis saepe odio dolore sunt deleniti quae quisquam. Provident reiciendis excepturi optio beatae ratione quisquam.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"service-container\">\r\n            <div className=\"services-card service-three\"></div>\r\n            <div className=\"service-description\">\r\n              <h3>24 Hour Support</h3>\r\n              <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque molestiae nisi modi tempora? Esse illum iure reiciendis delectus officia aspernatur, fuga dolore cupiditate. Cum aspernatur, autem tenetur non illo officiis quasi unde architecto sit molestiae corporis saepe odio dolore sunt deleniti quae quisquam. Provident reiciendis excepturi optio beatae ratione quisquam.</div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section>\r\n          <h2>Join our newsletter to get the latest trends.</h2>\r\n\r\n          <form className=\"newsletter\" onSubmit={join}>\r\n            <input type=\"email\" placeholder=\"Your email goes here\" onChange={(e) => setJoined(e.target.value)} />\r\n            <input type=\"submit\" value=\"Join Now!\" />\r\n          </form>\r\n        </section>\r\n\r\n\r\n\r\n      </main>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Main;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Contact = () => {\r\n\r\n  const history = useHistory();\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [contactEmail, setContactEmail] = useState(\"\");\r\n\r\n  const sendEmail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let email = {\r\n      title,\r\n      content,\r\n      contactEmail\r\n    }\r\n\r\n    console.log(\"sending email\", email);\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"back\" onClick={goBack}> &larr; Go Back</button>\r\n\r\n      <form className=\"contact\" onSubmit={sendEmail}>\r\n        <h2>Send me a message so we can start a new project</h2>\r\n\r\n        <label htmlFor=\"title\">Message Title: </label>\r\n        <input type=\"text\" name=\"title\" onChange={(e) => setTitle(e.target.value)} />\r\n\r\n        <label htmlFor=\"content\">Message Content: </label>\r\n        <textarea name=\"content\" onChange={(e) => setContent(e.target.value)}  ></textarea>\r\n\r\n        <label htmlFor=\"email\">Contact Email: </label>\r\n        <input type=\"email\" name=\"email\" onChange={(e) => setContactEmail(e.target.value)} />\r\n\r\n        <input type=\"submit\" value=\"Send Message\" />\r\n      </form>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Contact;","import React, { useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst Thanks = () => {\r\n\r\n  const history = useHistory();\r\n  const { name } = useParams();\r\n\r\n  console.log(history);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"thanks\">\r\n        <p>Thanks <strong>{name} !!</strong></p>\r\n        <p>You joined <strong>{history.location.state}</strong></p>\r\n      </div>\r\n    </React.Fragment >\r\n  )\r\n}\r\n\r\nexport default Thanks;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n//components\r\nimport Main from \"./components/Main\";\r\nimport Contact from \"./components/Contact\";\r\nimport Thanks from \"./components/Thanks\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route exact path=\"/contact\" component={Contact} />\r\n      <Route exact path=\"/thanks/:name\" component={Thanks} />\r\n    </Switch>\r\n  )\r\n};\r\n\r\nexport default Routes;","import React, { useState, useEffect } from 'react';\nimport Routes from \"./routes\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction App() {\n\n  const history = useHistory();\n  const [path, setPath] = useState(\"\");\n\n  // DARK MODE\n  // const [darkMode, setDarkMode] = React.useState(true);\n\n\n  window.addEventListener(\"load\", () => {\n\n    if (window.location.pathname === \"/contact\") {\n      setPath(window.location.pathname);\n    }\n  });\n\n  const checkPath = () => {\n    history.listen((location) => {\n      setPath(location.pathname)\n    });\n  }\n\n  useEffect(() => {\n    checkPath();\n  }, []);\n\n  const showContact = path;\n  let _contact;\n  if (showContact !== \"/contact\") {\n    _contact = (<li><Link to=\"/contact\">Contact Me</Link></li>)\n  }\n\n  return (\n    // <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\n    <div className=\"App\">\n      <div className=\"container\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\"> WebApp Solution </Link>\n            </li>\n          </ul>\n          <ul>\n            {_contact}\n          </ul>\n        </nav>\n        <Routes />\n      </div>\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dark.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}